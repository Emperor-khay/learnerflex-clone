1. Change the loginrequest back to password min back to 6 in for production

####################################################
has_paid_onboard in users table is checking if you have paid #5100

######  Public Routes ########################

POST /payment/make-payment: Initiates the payment process for a product using Paystack.

POST /payment/callback: Handles the payment callback from Paystack after a transaction is completed.

POST /ebook-mentorship/make-payment: Initiates payment for the ebook mentorship program using Paystack.

POST /ebook-mentorship/callback: Handles the payment callback for the ebook mentorship program.

POST /password/reset-link: Sends a password reset link to the user's registered email address.

POST /password/new-password: Resets the vendor's password with the new credentials.

POST /auth/register: Initiates user registration for new affiliates.

GET/POST /auth/payment/callback: Handles the payment callback after a successful registration transaction. We need talk about how the response will be handle

POST /auth/login: Handles user login for authentication with email and password.


    UNDER AFFILIATE ROUTE GROUPS


Profile routes:

POST /update/image: Updates the authenticated user's profile image. The request should include the new image file. The server will store the image and update the user's profile.
POST /update/profile: Updates the user's profile information such as name, bio, or other personal details. Expects a JSON body with the profile fields.
Vendor request:

POST /request-vendor: Allows an affiliate to request vendor status. Expects email and sale_url in the request body. On successful submission, an email is sent to notify the admin.
GET /check-sale: Checks whether the user has made any sales. The request requires an email and will return sales information linked to that user.
Withdrawal routes:

GET /request/withdrawal: Amount is mandatory Initiates a withdrawal request for the authenticated user. If the user has bank details saved, they will be auto-filled. Otherwise, they will be prompted to provide them.
GET /withdrawals: Retrieves a list of past withdrawals for the user, including details like the amount and status of each request.
Transaction routes:

6. Get Withdrawal Requests
Endpoint: GET /withdrawals
Description: Retrieves withdrawal records filtered by status and sorted by newest.
Query Parameters:
GET /withdrawals?status=approved endpoint => there are 3 status , 
a-pending,
b-approved
c-rejected
Response:
Success: List of withdrawal records.

GET /transactions: Fetches the transaction history for the authenticated user, including both successful and failed transactions.
Product routes:

GET /products: Retrieves a list of products available for affiliates to promote. The products are filtered based on affiliate status and availability.
GET /products/{id}: Retrieves detailed information about a specific product, including its price, description, and commission rate for affiliates. I will include vendor details in it
Market access routes:

POST /unlock/market: Initiates the process for affiliates to unlock market access by making a payment. Expects payment details in the request body.
GET /unlock/market/callback: Paystack callback URL for confirming payment and unlocking market access. This endpoint processes the payment result and updates the user's access accordingly.
Logout route:

POST /logout: Logs out the authenticated user, invalidating their session or token.

############## Vendors routes #############

Here is a two-line documentation for each of the vendor routes:

GET /vendor/dashboard: Retrieves vendor-specific dashboard metrics such as sales and product performance.

GET /vendor/affiliate/dashboard: Fetches metrics related to affiliates promoting the vendor's products.


POST /vendor/update/profile: Updates the vendor's profile information. data like phone,country,image,bank_name,bank_account are changeable

GET /vendor/data: Retrieves the authenticated vendor's data. you can leave this for now

GET /vendor/affiliate/products: Lists products available for vendor to promote.

GET /vendor/affiliate/product/{id}: Displays detailed information about a specific affiliate product.

GET /vendor/affiliate/sales: Retrieves sales data for the vendor's affiliate promotions.

GET /vendor/products: Lists all products by the authenticated vendor.

GET /vendor/product/{id}: Fetches detailed information for a specific product by its ID.

DELETE /vendor/product/delete/{id}: Deletes the specified product from the vendor's catalog.

POST /vendor/product/digital/create: Creates a new digital product for the vendor.

POST /vendor/product/other/create: Creates a new non-digital product for the vendor.

PATCH /vendor/products/digital/{id}/update: Updates an existing digital product.

PATCH /vendor/products/other/{id}/update: Updates an existing non-digital product.

DELETE /vendor/products/{id}/delete: Permanently deletes the specified product from the system.

GET /vendor/transactions: Retrieves the vendor's sales transactions.

POST /vendor/product-performance: Sends product performance data for analysis.

GET /vendor/affiliate-details/{aff_id}: Retrieves details of an affiliate by their affiliate ID.

POST /vendor/product/add-product: Adds a new product to the vendor's catalog.

GET /vendor/make/withdrawal: Initiates a withdrawal request for the vendor.

GET /vendor/withdrawals: Retrieves all past withdrawal records for the vendor. filter by status pending,approved,rejected

############## ADMIN ROutes #########

Here is the documentation for the admin routes:

GET /admin/dashboard: Retrieves dashboard metrics and data for the super admin.

GET /admin/products: Lists all products for the super admin to view.

GET /admin/product/{id}: Retrieves details of a single product by its ID.

PUT /admin/product/{id}: Updates the product details based on its ID.

POST /admin/product/{id}/approve: Approves a product for publishing.

DELETE /admin/product/{id}: Deletes a product by its ID.

GET /admin/users: Lists all users, including affiliates, vendors, and admins.

GET /admin/users/{role}/{id}: Retrieves user details by role and user ID.

POST /admin/users/{role}: Creates a new user or entity based on the role.

PUT /admin/users/{role}/{id}: Updates user details based on role and ID.

DELETE /admin/users/{role}/{id}: Deletes a user by role and ID.

GET /admin/transactions: Retrieves all transaction records.

POST /admin/affiliate/bulk-upload: Uploads affiliates in bulk to the system.

GET /admin/vendor-requests: Lists all vendor upgrade requests from affiliates.

PATCH /admin/accept-vendor-request/{id}: Approves an affiliate's request to become a vendor.

POST /admin/logout: Logs out the currently authenticated super admin.


############## Affiliate routes ####################

GET /affiliate/dashboard: Fetch metrics and data specific to the affiliate's dashboard.
POST /affiliate/update/profile: Updates the affiliate's profile information. data like phone,country,image,bank_name,bank_account are changeable
POST /affiliate/request-vendor: Submits a vendor request on behalf of the affiliate.
GET /affiliate/check-sale: Retrieves sale data using the buyer's email.
GET /affiliate/request/withdrawal: Initiates a withdrawal request for the affiliate.
GET /affiliate/withdrawals: Retrieves the affiliate's withdrawal history. filter by status pending,approved,rejected
GET /affiliate/transactions: Fetches the affiliate's transaction records.
GET /affiliate/products: Lists the available products for the affiliate to promote.
GET /affiliate/products/{id}: Shows details of a specific product.
POST /affiliate/unlock/market: Triggers the payment unlocking of marketplace access for the affiliate.
GET /affiliate/unlock/market/callback: Manages the Paystack callback after market access purchase.
POST /affiliate/logout: Logs out the affiliate from the system.

new additions 26/11/2024

/change-password for auth users takes new_password, old_password and new_password_confirmation
/vendor/product/other/create now takes in a nullable file input which for now is just pdf 2. the image input for this is now images which must be in an array with max of 5  although the old image will be left unchanged, the first image from the array will be the used to populate image column so you can get one image from image column and 5 images from images column return in product data 
/request-access-token require email to get the access token
/validate-access-token require email and token sent to mail to get purchased products for users who wants to access their products list

update 11/12/2024

/check-sale  === is a post request for with email required - checks if user aff id is used to purchase products

admin routes
List Users
GET /users - Retrieve all users, with optional filters (e.g.name, role, per page).

View User Details
GET /users/{id} - View user details by role and ID. returns products and vendor profile for who has it

Create User
POST /users/create - Create a new user, either affiliate or vendor, with necessary details. vendor email is nullable

Update User
POST /users/edit/{id} - Update user information based on ID and provided data. can change name , add vendor_email, role

Delete User
DELETE /users/{id} - Delete a user by ID.

Filter Vendor Status
GET /users/vendor-status - Retrieve vendors based on their status (e.g.active, pending, inactive).

########for products section in admin -- I decided to use vendor method to fill it in(how you handle vendor endpoint is similiar to this)###########

List Products
GET /products - Fetch all products.

View Product Details
GET /products/{id} - Fetch details of a specific product.

Create Digital Product
POST /products/digital/create - Add a new digital product.

Create Other Product
POST /products/other/create - Add a non-digital product.

Update Digital Product
POST /products/digital/{id}/update - Edit a digital product by ID.

Update Other Product
POST /products/other/{id}/update - Edit a non-digital product by ID.

Delete Product
DELETE /products/{id}/delete - Remove a product by ID.

## Admin routes 24/12/2024 ##

/withdrawals/pending/download --- --- returns csv file of response you can convert to csv
/withdrawals/approve-all ---- approve all pending requests and sends mail must specify type affiliate or vendor
